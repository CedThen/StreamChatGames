{"version":3,"sources":["imgs/stormcloud.png","Components/ThreeJSBackground.js","Components/Navbar/Navigation.js","Components/HomePage/Home.js","Components/DisplayMsgs/DisplayMsgs.js","Components/StreamConnectionBox/StreamConnectionBox.js","Components/GameLibraryDisplay/GameLibraryDisplay.js","Components/GameDisplay/GameDisplay.js","Components/Madlibs/MadlibsMain.js","Components/About/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","camera","scene","renderer","flash","ambient","directionalLight","rainDrop","Navigation","className","to","React","Component","MontJson","require","cloudParticles","rain","ThreeJsBg","props","disposeScene","dispose","mount","removeChild","domElement","init","console","log","state","THREE","position","z","rotation","x","y","add","set","fog","setClearColor","color","setSize","window","innerWidth","innerHeight","animType","letterFallInit","load","stormcloud","texture","cloudGeo","cloudMaterial","map","transparent","p","cloud","Math","random","material","opacity","push","animate","letterFallAnim","wordFall","forEach","remove","power","requestAnimationFrame","render","velocity","currentWords","msg","word","newCurrentWords","setState","font","parse","fontGeo","size","height","curveSegments","fontMat","wordDrop","updatedWordObj","r","randomLetter","floor","toString","toUpperCase","this","appendChild","cssClass","ref","Home","DisplayMsgs","msgsArray","rankedMsgs","msgObject","index","key","count","StreamConnectionBox","onStreamChange","onSubmitStreamClick","onTimerChange","streamUrl","chatTimer","onStreamConnectionResetClick","type","onChange","value","min","max","defaultValue","onClick","GameLibraryDisplay","gameObjectLibrary","onGameTitleClick","gameObjectTitles","gameObject","title","randomSeed","length","GameDisplay","chatAnswer","answerArray","currentGameObject","blankIndex","timeLeft","isGamePlaying","showResults","onGameBeginClick","onNextClick","onRestartGameClick","onReturnLibClick","onShowResultsClick","blanksArray","game","blanks","blank","TimerDisplay","BlankDisplay","NextClick","GameEndDisplay","WordProgressCounter","gameFinal","concat","MadlibsHome","componentWillUnmount","ws","close","addMsgsToLib","newMsgUntrimmed","allMsgsLib","newMsg","trim","toLowerCase","updatedChatMsgs","compareAndRankMsgs","seenBefore","newMsgObj","i","splice","j","pop","tempRankedMsgs","wsMessageHandler","message","wsMsg","JSON","data","latestMsg","payload","event","target","alert","streamBoxWsMsg","stringify","inputTimer","send","showStreamBox","toggleShowStreamConnectionBox","gamePath","resetChatStorage","gameLoop","timer","setInterval","stopListeningChatInput","newAnswerArray","clearInterval","resetGameState","WebSocket","onopen","onmessage","onclose","addEventListener","About","App","path","component","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cda323ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stormcloud.76969ebb.png\";","import * as THREE from \"three\";\r\nimport stormcloud from \"../imgs/stormcloud.png\";\r\nimport React from \"react\";\r\nconst MontJson = require(\"../Fonts/Montserrat_Regular.json\");\r\n\r\nlet camera,\r\n  scene,\r\n  renderer,\r\n  cloudParticles = [],\r\n  flash,\r\n  ambient,\r\n  directionalLight,\r\n  rainCount = 100,\r\n  rainDrop,\r\n  rain = [];\r\n\r\nclass ThreeJsBg extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animType: this.props.animType,\r\n      currentWords: {}\r\n    };\r\n    console.log(\"props: \", this.props);\r\n  }\r\n  componentDidMount() {\r\n    this.init();\r\n    this.mount.appendChild(renderer.domElement);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.disposeScene();\r\n  }\r\n\r\n  disposeScene = () => {\r\n    camera = null;\r\n    cloudParticles = [];\r\n    ambient = null;\r\n    directionalLight = null;\r\n    rainDrop = null;\r\n    rain = [];\r\n    scene.dispose();\r\n    this.mount.removeChild(renderer.domElement);\r\n  };\r\n\r\n  init = () => {\r\n    console.log(\"animtype: \", this.state);\r\n    scene = new THREE.Scene();\r\n    camera = new THREE.PerspectiveCamera(60, 2, 1, 1000);\r\n    camera.position.z = 1;\r\n    camera.rotation.x = 1.16;\r\n    camera.rotation.y = -0.12;\r\n    camera.rotation.z = 0.27;\r\n\r\n    ambient = new THREE.AmbientLight(0x555555);\r\n    scene.add(ambient);\r\n    directionalLight = new THREE.DirectionalLight(0xffeedd);\r\n    directionalLight.position.set(0, 0, 1);\r\n    scene.add(directionalLight);\r\n    //flash\r\n    flash = new THREE.PointLight(0x062d89, 30, 600, 1.7);\r\n    flash.position.set(200, 300, 100);\r\n\r\n    //renderer\r\n    renderer = new THREE.WebGLRenderer();\r\n    scene.fog = new THREE.FogExp2(0x11111f, 0.002);\r\n    renderer.setClearColor(scene.fog.color);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    if (this.state.animType === \"homePage\") {\r\n      this.letterFallInit();\r\n    }\r\n    //cloud bg\r\n    let loader = new THREE.TextureLoader();\r\n    loader.load(stormcloud, function(texture) {\r\n      let cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\r\n      let cloudMaterial = new THREE.MeshLambertMaterial({\r\n        map: texture,\r\n        transparent: true\r\n      });\r\n      for (let p = 0; p < 25; p++) {\r\n        let cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\r\n        cloud.position.set(Math.random() * 800 - 400, 500, Math.random() * 500 - 450);\r\n        cloud.rotation.x = 1.16;\r\n        cloud.rotation.y = -0.12;\r\n        cloud.rotation.z = Math.random() * 360;\r\n        cloud.material.opacity = 0.6;\r\n        cloudParticles.push(cloud);\r\n\r\n        scene.add(cloud);\r\n      }\r\n    });\r\n    this.animate();\r\n  };\r\n\r\n  animate = () => {\r\n    //rain anim\r\n    if (this.state.animType === \"homePage\") {\r\n      this.letterFallAnim();\r\n    }\r\n    if (this.state.animType === \"madlibs\") {\r\n      this.wordFall();\r\n    }\r\n\r\n    cloudParticles.forEach(p => {\r\n      p.rotation.z -= 0.0005;\r\n    });\r\n    if (Math.random() > 0.9) {\r\n      scene.add(flash);\r\n    } else {\r\n      scene.remove(flash);\r\n    }\r\n    if (Math.random() > 0.93 || flash.power > 100) {\r\n      if (flash.power < 100)\r\n        flash.position.set(Math.random() * 400, 300 + Math.random() * 200, 100);\r\n      flash.power = 50 + Math.random() * 500;\r\n    }\r\n\r\n    requestAnimationFrame(this.animate);\r\n    renderer.render(scene, camera);\r\n  };\r\n\r\n  letterFallAnim = () => {\r\n    rain.forEach(p => {\r\n      p.velocity -= 0.01;\r\n      p.position.y += p.velocity;\r\n      if (p.position.y < 0) {\r\n        p.position.y = Math.random() * 300 + 500;\r\n        p.position.x = Math.random() * 800 - 400;\r\n        p.position.z = Math.random() * 500 - 450;\r\n        p.velocity = 0;\r\n      }\r\n    });\r\n  };\r\n\r\n  wordFall = () => {\r\n    if (!this.state.currentWords[this.props.msg]) {\r\n      //not a currently falling word, create and add to scene\r\n      console.log(\"making new word geo\");\r\n      let fontL = new THREE.FontLoader();\r\n      let font = fontL.parse(MontJson);\r\n\r\n      let fontGeo = new THREE.TextBufferGeometry(this.props.msg, {\r\n        font: font,\r\n        size: 7,\r\n        height: 1,\r\n        curveSegments: 12\r\n      });\r\n      let fontMat = new THREE.MeshLambertMaterial({\r\n        color: 0xa6d8d4,\r\n        transparent: true\r\n      });\r\n      let wordDrop = new THREE.Mesh(fontGeo, fontMat);\r\n      wordDrop.position.set(\r\n        Math.random() * 800 - 400,\r\n        Math.random() * 800,\r\n        Math.random() * 500 - 450\r\n      );\r\n      wordDrop.rotation.x = 1.16;\r\n      wordDrop.rotation.y = -0.12;\r\n      wordDrop.material.opacity = 0.6;\r\n      wordDrop.velocity = {};\r\n      wordDrop.velocity = -1;\r\n\r\n      let updatedWordObj = this.state.currentWords;\r\n      updatedWordObj[this.props.msg] = wordDrop;\r\n      console.log(\"updated wordd obj: \", updatedWordObj);\r\n      this.setState({ currentWords: updatedWordObj });\r\n\r\n      scene.add(wordDrop);\r\n    } else {\r\n      for (let word in this.state.currentWords) {\r\n        this.state.currentWords[word].velocity -= 0.01;\r\n        this.state.currentWords[word].position.y += this.state.currentWords[word].velocity;\r\n        if (this.state.currentWords[word].position.y < 0) {\r\n          scene.remove(this.state.currentWords[word]);\r\n          let newCurrentWords = this.state.currentWords;\r\n          delete newCurrentWords[word];\r\n          this.setState(newCurrentWords);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  letterFallInit = () => {\r\n    let fontL = new THREE.FontLoader();\r\n    let font = fontL.parse(MontJson);\r\n\r\n    function randomLet() {\r\n      return Math.floor(Math.random() * 36)\r\n        .toString(36)\r\n        .toUpperCase();\r\n    }\r\n\r\n    for (let r = 0; r < rainCount; r++) {\r\n      let randomLetter = randomLet();\r\n      let fontGeo = new THREE.TextBufferGeometry(randomLetter, {\r\n        font: font,\r\n        size: 7,\r\n        height: 1,\r\n        curveSegments: 12\r\n      });\r\n      let fontMat = new THREE.MeshLambertMaterial({\r\n        color: 0xa6d8d4,\r\n        transparent: true\r\n      });\r\n      rainDrop = new THREE.Mesh(fontGeo, fontMat);\r\n      rainDrop.position.set(\r\n        Math.random() * 800 - 400,\r\n        Math.random() * 800,\r\n        Math.random() * 500 - 450\r\n      );\r\n      rainDrop.rotation.x = 1.16;\r\n      rainDrop.rotation.y = -0.12;\r\n      rainDrop.material.opacity = 0.6;\r\n      rainDrop.velocity = {};\r\n      rainDrop.velocity = -1;\r\n      rain.push(rainDrop);\r\n      scene.add(rainDrop);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div className={this.props.cssClass} ref={ref => (this.mount = ref)}></div>;\r\n  }\r\n}\r\n\r\nexport default ThreeJsBg;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Navigation.scss\";\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navigation\">\r\n        <NavLink className=\"nav-btn\" to=\"/\">\r\n          Home\r\n        </NavLink>\r\n        <NavLink className=\"nav-btn\" to=\"/Madlibs\">\r\n          Madlibs\r\n        </NavLink>\r\n        <NavLink className=\"nav-btn\" to=\"/About\">\r\n          About\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./Home.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Navigation from \"../Navbar/Navigation.js\";\r\nimport ThreeJsBg from \"../ThreeJSBackground.js\";\r\n\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header header__container\">\r\n        <Navigation />\r\n        {/* <div className=\"header__three-canvas\" ref={ref => (this.mount = ref)}></div> */}\r\n        <ThreeJsBg cssClass=\"header__three-canvas\" animType={\"homePage\"} />\r\n        <header>\r\n          <div className=\"header__text-box\">\r\n            <h1 className=\"header__heading-primary\">Stream Chat Games</h1>\r\n            {/* <h3 className=\"header__heading-sub\">Pick your poison</h3> */}\r\n          </div>\r\n        </header>\r\n        <div className=\"link-container\">\r\n          <div className=\"link-container__madlib\">\r\n            <NavLink className=\"link-container__btn\" to=\"/Madlibs\">\r\n              Madlibs\r\n            </NavLink>\r\n            <div className=\"link-container__text\">\r\n              How <span className=\"dumb\">dumb</span> clever is your chat?\r\n            </div>\r\n          </div>\r\n          <div className=\"link-container__crosswords\">\r\n            <NavLink className=\"link-container__btn\" to=\"/Madlibs\">\r\n              Crosswords\r\n            </NavLink>\r\n            <div className=\"link-container__text\">How smart is your chat?</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./DisplayMsgs.scss\";\r\n\r\nfunction DisplayMsgs({ rankedMsgs }) {\r\n  let msgsArray = rankedMsgs.map((msgObject, index) => {\r\n    return (\r\n      <li className=\"displayMsgs__text\" key={index}>\r\n        <h3>\r\n          {msgObject.msg}{\" \"}\r\n          <span className=\"displayMsgs__vote-count\">Votes: {msgObject.count}</span>\r\n        </h3>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"displayMsgs__container\">\r\n      <h2 className=\"displayMsgs__title\">Chat Input Ranking</h2>\r\n      <ol>{msgsArray}</ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayMsgs;\r\n","import React from \"react\";\r\nimport \"./StreamConnectionBox.scss\";\r\n\r\nconst StreamConnectionBox = ({\r\n  onStreamChange,\r\n  onSubmitStreamClick,\r\n  onTimerChange,\r\n  streamUrl,\r\n  chatTimer,\r\n  onStreamConnectionResetClick\r\n}) => {\r\n  return (\r\n    <div className=\"streambox\">\r\n      <h3 className=\"streambox__title\">Enter stream link</h3>\r\n      <span className=\"streambox__url-tag\">Twitch.tv/ </span>\r\n      <input\r\n        className=\"streambox__url-input\"\r\n        type=\"text\"\r\n        onChange={onStreamChange}\r\n        value={streamUrl}\r\n      />\r\n      <div className=\"streambox__timer-tag\">Chat Input Timer (seconds):</div>\r\n      <input\r\n        className=\"streambox__timer-input-range\"\r\n        type=\"range\"\r\n        min=\"15\"\r\n        max=\"120\"\r\n        defaultValue=\"30\"\r\n        onChange={onTimerChange}\r\n      />\r\n      <span className=\"streambox__timer-seconds\">{chatTimer} seconds</span>\r\n      <br />\r\n      <input\r\n        className=\"streambox__url-submit\"\r\n        type=\"submit\"\r\n        value=\"Submit!\"\r\n        onClick={onSubmitStreamClick}\r\n      />\r\n      {streamUrl !== \"\" ? (\r\n        <div onClick={onStreamConnectionResetClick}>Reset</div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamConnectionBox;\r\n","import React from \"react\";\r\nimport \"./GameLibraryDisplay.scss\";\r\n\r\nconst GameLibraryDisplay = ({ gameObjectLibrary, onGameTitleClick }) => {\r\n  const gameObjectTitles = gameObjectLibrary.map((gameObject, index) => {\r\n    return (\r\n      <li key={index} onClick={() => onGameTitleClick(index)}>\r\n        <span className=\"gameObject__list-title\">{gameObject.title}</span>\r\n      </li>\r\n    );\r\n  });\r\n  let randomSeed = Math.floor(Math.random() * gameObjectLibrary.length);\r\n  return (\r\n    <div className=\"GameLibraryDisplay__container\">\r\n      <h2 className=\"GameLibraryDisplay__title\">Choose a madlib</h2>\r\n      <ul className=\"GameLibraryDisplay__list\">{gameObjectTitles}</ul>\r\n      <h2 className=\"GameLibraryDisplay__random\" onClick={() => onGameTitleClick(randomSeed)}>\r\n        Random!\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameLibraryDisplay;\r\n","import React from \"react\";\r\nimport \"./GameDisplay.scss\";\r\n\r\nconst GameDisplay = ({\r\n  chatAnswer,\r\n  answerArray,\r\n  currentGameObject,\r\n  blankIndex,\r\n  timeLeft,\r\n  chatTimer,\r\n  isGamePlaying,\r\n  showResults,\r\n  onGameBeginClick,\r\n  onNextClick,\r\n  onRestartGameClick,\r\n  onReturnLibClick,\r\n  onShowResultsClick\r\n}) => {\r\n  const blanksArray = currentGameObject.game.blanks.map((blank, index) => {\r\n    return (\r\n      <div key={index}>\r\n        ___________________\r\n        <br></br>\r\n        {blank}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const timerStyle = {\r\n    animation: \"colorShift\",\r\n    animationDuration: chatTimer + \"s\"\r\n  };\r\n  // console.log(timerStyle);\r\n  // console.log(\"timeleft: \", timeLeft);\r\n  const TimerDisplay = () => {\r\n    return <div className=\"timerDisplay\">{timeLeft} s</div>;\r\n  };\r\n  const BlankDisplay = () => {\r\n    return (\r\n      <div className=\"blank-display\">\r\n        {timeLeft === 0 ? chatAnswer.msg : <div></div>} {blanksArray[blankIndex]}\r\n      </div>\r\n    );\r\n  };\r\n  const NextClick = () => {\r\n    if (timeLeft === 0 && answerArray.length < blanksArray.length) {\r\n      return (\r\n        <div className=\"next-btn\" onClick={onNextClick}>\r\n          Next\r\n        </div>\r\n      );\r\n    } else if (timeLeft === 0 && answerArray.length === blanksArray.length) {\r\n      return <GameEndDisplay />;\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  };\r\n  const WordProgressCounter = () => {\r\n    return (\r\n      <div>\r\n        {blankIndex + 1}/{blanksArray.length}\r\n      </div>\r\n    );\r\n  };\r\n  const GameEndDisplay = () => {\r\n    return (\r\n      <div>\r\n        The End!\r\n        <div className=\"game-end-display\" onClick={onShowResultsClick}>\r\n          Show Results\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const GameContainer = () => {\r\n    return (\r\n      <div>\r\n        <TimerDisplay />\r\n        <BlankDisplay />\r\n        <WordProgressCounter />\r\n        <NextClick />\r\n      </div>\r\n    );\r\n  };\r\n  const DisplayResults = () => {\r\n    return (\r\n      <div>\r\n        Here be results lol\r\n        {gameFinal}\r\n      </div>\r\n    );\r\n  };\r\n  let gameFinal = currentGameObject.game.value.map((value, index) => {\r\n    return value.concat(`${answerArray[index]}`);\r\n  });\r\n  return (\r\n    <div className=\"gameDisplay gameDisplay__container\">\r\n      <h2 className=\"gameDisplay__title\">{currentGameObject.title}</h2>\r\n      <br></br>\r\n      {!isGamePlaying && answerArray.length === 0 ? (\r\n        <h2 className=\"gameDisplay__begin-btn\" onClick={onGameBeginClick}>\r\n          Begin!\r\n        </h2>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {isGamePlaying ? <GameContainer className=\"gameDisplay__game-container\" /> : <div></div>}\r\n      {showResults ? <DisplayResults /> : <div></div>}\r\n      <br></br>\r\n      <h3 className=\"gameDisplay__return-btn\" onClick={onReturnLibClick}>\r\n        Return to Game Selection\r\n      </h3>\r\n      <h3 className=\"gameDisplay__restart-btn\" onClick={onRestartGameClick}>\r\n        Restart\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameDisplay;\r\n","import React from \"react\";\r\nimport DisplayMsgs from \"../DisplayMsgs/DisplayMsgs\";\r\nimport StreamConnectionBox from \"../StreamConnectionBox/StreamConnectionBox\";\r\nimport \"./MadlibsMain.scss\";\r\nimport GameLibraryDisplay from \"../GameLibraryDisplay/GameLibraryDisplay\";\r\nimport GameDisplay from \"../GameDisplay/GameDisplay\";\r\nimport Navigation from \"../Navbar/Navigation.js\";\r\nimport ThreeJsBg from \"../ThreeJSBackground.js\";\r\n\r\nconst socketURL = \"ws://localhost:3030\";\r\n\r\nclass MadlibsHome extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      //stream connection box\r\n      chatTimer: 30,\r\n      streamUrl: \"\",\r\n      showStreamBox: true,\r\n      //chat display\r\n      latestMsg: \"\",\r\n      rankedMsgs: [],\r\n      allMsgsLib: {},\r\n      //game display\r\n      gameObjectLibrary: [],\r\n      //game control\r\n      answerArray: [],\r\n      currentGameObject: null,\r\n      blankIndex: null,\r\n      timeLeft: null,\r\n      isGamePlaying: false,\r\n      showResults: false\r\n    };\r\n    //websocket client setup\r\n    this.ws = new WebSocket(socketURL);\r\n    this.ws.onopen = () => {\r\n      console.log(\"connected\");\r\n      this.ws.send(\r\n        JSON.stringify({\r\n          type: \"getMadlibLibrary\"\r\n        })\r\n      );\r\n    };\r\n    this.ws.onmessage = this.wsMessageHandler;\r\n    this.ws.onclose = () => {\r\n      console.log(\"disconnected from ws\");\r\n    };\r\n    //close server-side streamconnection before page refresh/unload\r\n    window.addEventListener(\"unload\", () => {\r\n      this.ws.send(JSON.stringify({ type: \"streamReset\" }));\r\n    });\r\n    //save timer as variable so it can be cleared later\r\n    this.timer = null;\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    console.log(\"closing websocket connection\");\r\n    this.ws.close();\r\n    // window.removeEventListener(\"unload\");\r\n  };\r\n\r\n  addMsgsToLib = newMsgUntrimmed => {\r\n    let { allMsgsLib } = this.state;\r\n    const newMsg = newMsgUntrimmed.trim().toLowerCase();\r\n    if (allMsgsLib[newMsg]) {\r\n      const updatedChatMsgs = allMsgsLib;\r\n      updatedChatMsgs[newMsg]++;\r\n      this.setState({ allMsgsLib: updatedChatMsgs });\r\n      this.compareAndRankMsgs(newMsg, true);\r\n    } else {\r\n      const updatedChatMsgs = allMsgsLib;\r\n      allMsgsLib[newMsg] = 1;\r\n      this.setState({ allMsgsLib: updatedChatMsgs });\r\n      this.compareAndRankMsgs(newMsg, false);\r\n    }\r\n  };\r\n\r\n  //msg objects structure\r\n  // const newMsgObj = {\r\n  //   msg: newMsg,\r\n  //   count: allMsgsLib[newMsg]\r\n  // };\r\n\r\n  compareAndRankMsgs = (newMsg, seenBefore) => {\r\n    let { allMsgsLib, rankedMsgs } = this.state;\r\n    const newMsgObj = {\r\n      msg: newMsg,\r\n      count: allMsgsLib[newMsg]\r\n    };\r\n    if (rankedMsgs.length === 0) {\r\n      //add first one to array\r\n      this.setState({ rankedMsgs: [newMsgObj] });\r\n    } else {\r\n      //rankedmsgs length > 0\r\n      if (seenBefore) {\r\n        for (let i = 0; i <= rankedMsgs.length - 1; i++) {\r\n          if (allMsgsLib[newMsg] > rankedMsgs[i].count) {\r\n            //if newMsg count is greater than current array item, add newobj, remove any duplicates\r\n            rankedMsgs.splice(i, 0, newMsgObj);\r\n            for (let j = i + 1; j < rankedMsgs.length; j++) {\r\n              if (newMsg === rankedMsgs[j].msg) {\r\n                rankedMsgs.splice(j, 1);\r\n              }\r\n            }\r\n            if (rankedMsgs.length > 10) {\r\n              //make sure max length is 10\r\n              rankedMsgs.pop();\r\n            }\r\n            this.setState({ rankedMsgs: rankedMsgs });\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        //not seen before\r\n        if (rankedMsgs.length < 10) {\r\n          //add to end\r\n          let tempRankedMsgs = rankedMsgs.concat(newMsgObj);\r\n          this.setState({ rankedMsgs: tempRankedMsgs });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  wsMessageHandler = message => {\r\n    let wsMsg = JSON.parse(message.data);\r\n    console.log(\"parsed ws msg: \", wsMsg);\r\n    switch (wsMsg.type) {\r\n      case \"newMsg\":\r\n        this.setState(() => {\r\n          return { latestMsg: wsMsg.payload };\r\n        });\r\n        this.addMsgsToLib(wsMsg.payload);\r\n        break;\r\n      case \"madlibLibraryJson\":\r\n        this.setState({ gameObjectLibrary: wsMsg.payload });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onStreamChange = event => {\r\n    this.setState({ streamUrl: event.target.value });\r\n  };\r\n\r\n  onTimerChange = event => {\r\n    this.setState({ chatTimer: event.target.value });\r\n  };\r\n\r\n  onSubmitStreamClick = event => {\r\n    console.log(\"submit clicked, stream is: \", this.state.streamUrl);\r\n    if (this.state.streamUrl === \"\") {\r\n      alert(\"Please enter a valid url\");\r\n    } else {\r\n      const streamBoxWsMsg = JSON.stringify({\r\n        type: \"setupConfig\",\r\n        payload: {\r\n          streamUrl: this.state.streamUrl,\r\n          inputTimer: this.state.chatTimer\r\n        }\r\n      });\r\n      this.ws.send(streamBoxWsMsg);\r\n      this.setState({ showStreamBox: false });\r\n    }\r\n  };\r\n\r\n  toggleShowStreamConnectionBox = () => {\r\n    this.setState({ showStreamBox: !this.state.showStreamBox });\r\n  };\r\n\r\n  onGameTitleClick = index => {\r\n    this.setState({ currentGameObject: this.state.gameObjectLibrary[index] });\r\n  };\r\n\r\n  onGameBeginClick = () => {\r\n    if (this.state.streamUrl === \"\") {\r\n      alert(\"Please enter your stream information\");\r\n      return;\r\n    }\r\n    //initial game state\r\n    this.setState({\r\n      isGamePlaying: true\r\n    });\r\n    //begin game Path\r\n    this.gamePath();\r\n  };\r\n\r\n  gamePath = () => {\r\n    //reset chat status, set timer\r\n    this.resetChatStorage();\r\n    this.setState({\r\n      timeLeft: this.state.chatTimer\r\n    });\r\n    if (this.state.blankIndex === null) {\r\n      this.setState({ blankIndex: 0, timeLeft: this.state.chatTimer });\r\n      this.gameLoop();\r\n    } else {\r\n      this.setState({\r\n        blankIndex: this.state.blankIndex + 1,\r\n        timeLeft: this.state.chatTimer\r\n      });\r\n      this.gameLoop();\r\n    }\r\n  };\r\n\r\n  gameLoop = () => {\r\n    let beginListenMsg = {\r\n      type: \"beginListen\"\r\n    };\r\n    this.ws.send(JSON.stringify(beginListenMsg));\r\n    this.timer = setInterval(() => {\r\n      if (this.state.timeLeft > 1) {\r\n        //decrements timer\r\n        this.setState({ timeLeft: this.state.timeLeft - 1 });\r\n      } else {\r\n        this.stopListeningChatInput();\r\n\r\n        //new object to add to answerArray\r\n        let newAnswerArray = this.state.answerArray.concat(this.state.rankedMsgs[0].msg);\r\n\r\n        //leave time at 0, add in newAnswer to the array\r\n        this.setState({ timeLeft: 0, answerArray: newAnswerArray });\r\n\r\n        clearInterval(this.timer);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  onNextClick = () => {\r\n    this.gamePath();\r\n  };\r\n\r\n  onRestartGameClick = () => {\r\n    this.stopListeningChatInput();\r\n    this.resetGameState();\r\n    this.resetChatStorage();\r\n  };\r\n\r\n  resetGameState = () => {\r\n    this.setState({\r\n      blankIndex: null,\r\n      timeLeft: null,\r\n      isGamePlaying: false,\r\n      answerArray: [],\r\n      showResults: false\r\n    });\r\n  };\r\n\r\n  onReturnLibClick = () => {\r\n    this.resetChatStorage();\r\n    this.stopListeningChatInput();\r\n    this.resetGameState();\r\n    this.setState({\r\n      currentGameObject: null\r\n    });\r\n  };\r\n\r\n  stopListeningChatInput() {\r\n    const stopListeningMsg = {\r\n      type: \"stopListening\"\r\n    };\r\n    this.ws.send(JSON.stringify(stopListeningMsg));\r\n    if (this.timer) {\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n  resetChatStorage = () => {\r\n    this.setState({\r\n      rankedMsgs: [],\r\n      allMsgsLib: {}\r\n    });\r\n  };\r\n\r\n  onStreamConnectionResetClick = () => {\r\n    this.setState({ streamUrl: \"\" });\r\n    this.resetChatStorage();\r\n    let streamResetMsg = {\r\n      type: \"streamReset\"\r\n    };\r\n    this.ws.send(JSON.stringify(streamResetMsg));\r\n  };\r\n\r\n  onShowResultsClick = () => {\r\n    this.setState({\r\n      showResults: true,\r\n      isGamePlaying: false\r\n    });\r\n    this.resetChatStorage();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"madlibs__main\">\r\n        <Navigation />\r\n        <ThreeJsBg\r\n          cssClass=\"madlibs__three-canvas\"\r\n          animType=\"madlibs\"\r\n          msg={this.state.latestMsg}\r\n        />\r\n        <div className=\"madlibs__right-panel\">\r\n          {this.state.showStreamBox ? (\r\n            <div className=\"madlibs__streambox\">\r\n              <StreamConnectionBox\r\n                onStreamChange={this.onStreamChange}\r\n                onSubmitStreamClick={this.onSubmitStreamClick}\r\n                onTimerChange={this.onTimerChange}\r\n                chatTimer={this.state.chatTimer}\r\n                streamUrl={this.state.streamUrl}\r\n                onStreamConnectionResetClick={this.onStreamConnectionResetClick}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div className=\"madlibs__stream-tag\" onClick={this.toggleShowStreamConnectionBox}>\r\n              <span className=\"madlibs__stream-name\">{this.state.streamUrl}</span>\r\n            </div>\r\n          )}\r\n          <DisplayMsgs latestMsg={this.state.latestMsg} rankedMsgs={this.state.rankedMsgs} />\r\n        </div>\r\n        <div className=\"madlibs__left-panel\">\r\n          <h1 className=\"madlibs__title\">Madlibs</h1>\r\n          {!this.state.currentGameObject ? (\r\n            <GameLibraryDisplay\r\n              className=\"madlibs__gameLibraryDisplay\"\r\n              gameObjectLibrary={this.state.gameObjectLibrary}\r\n              onGameTitleClick={this.onGameTitleClick}\r\n              showStreamBox={this.state.showStreamBox}\r\n            />\r\n          ) : (\r\n            <GameDisplay\r\n              chatAnswer={this.state.rankedMsgs[0]}\r\n              answerArray={this.state.answerArray}\r\n              blankIndex={this.state.blankIndex}\r\n              isGamePlaying={this.state.isGamePlaying}\r\n              chatTimer={this.state.chatTimer}\r\n              timeLeft={this.state.timeLeft}\r\n              showResults={this.state.showResults}\r\n              currentGameObject={this.state.currentGameObject}\r\n              onNextClick={this.onNextClick}\r\n              onRestartGameClick={this.onRestartGameClick}\r\n              onGameBeginClick={this.onGameBeginClick}\r\n              onReturnLibClick={this.onReturnLibClick}\r\n              onShowResultsClick={this.onShowResultsClick}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MadlibsHome;\r\n","import React from \"react\";\r\nimport Navigation from \"../Navbar/Navigation.js\";\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navigation />\r\n        About Us\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\nimport Home from \"./Components/HomePage/Home\";\nimport MadlibsHome from \"./Components/Madlibs/MadlibsMain\";\n// import Navigation from \"./Components/Navbar/Navigation\";\nimport About from \"./Components/About/About\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route path=\"/\" component={Home} exact />\n            <Route path=\"/Madlibs\" component={MadlibsHome} />\n            <Route path=\"/About\" component={About} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}